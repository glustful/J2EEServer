package com.dunbian.jujiabao.appobj.generator;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class UserWalletExample {
	/*生成分页所需元素开始*/
	private int startRecord = -1;

	private int pageCount = -1;

	public void setStartRecord(int startRecord){
	   this.startRecord = startRecord;
	}

	public int getStartRecord(){
	   return startRecord;
	}

	public void setPageCount(int pageCount){
	   this.pageCount = pageCount;
	}

	public int getPageCount(){
	   return pageCount;
	}

	/*生成分页所需元素结束*/
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    public UserWalletExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(String value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(String value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(String value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(String value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(String value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(String value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<String> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<String> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(String value1, String value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(String value1, String value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andAmountIsNull() {
            addCriterion("amount is null");
            return (Criteria) this;
        }

        public Criteria andAmountIsNotNull() {
            addCriterion("amount is not null");
            return (Criteria) this;
        }

        public Criteria andAmountEqualTo(BigDecimal value) {
            addCriterion("amount =", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotEqualTo(BigDecimal value) {
            addCriterion("amount <>", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThan(BigDecimal value) {
            addCriterion("amount >", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("amount >=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThan(BigDecimal value) {
            addCriterion("amount <", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("amount <=", value, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountIn(List<BigDecimal> values) {
            addCriterion("amount in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotIn(List<BigDecimal> values) {
            addCriterion("amount not in", values, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("amount not between", value1, value2, "amount");
            return (Criteria) this;
        }

        public Criteria andBalanceIsNull() {
            addCriterion("balance is null");
            return (Criteria) this;
        }

        public Criteria andBalanceIsNotNull() {
            addCriterion("balance is not null");
            return (Criteria) this;
        }

        public Criteria andBalanceEqualTo(BigDecimal value) {
            addCriterion("balance =", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceNotEqualTo(BigDecimal value) {
            addCriterion("balance <>", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceGreaterThan(BigDecimal value) {
            addCriterion("balance >", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("balance >=", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceLessThan(BigDecimal value) {
            addCriterion("balance <", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("balance <=", value, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceIn(List<BigDecimal> values) {
            addCriterion("balance in", values, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceNotIn(List<BigDecimal> values) {
            addCriterion("balance not in", values, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("balance between", value1, value2, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("balance not between", value1, value2, "balance");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceIsNull() {
            addCriterion("frozen_balance is null");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceIsNotNull() {
            addCriterion("frozen_balance is not null");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceEqualTo(BigDecimal value) {
            addCriterion("frozen_balance =", value, "frozenBalance");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceNotEqualTo(BigDecimal value) {
            addCriterion("frozen_balance <>", value, "frozenBalance");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceGreaterThan(BigDecimal value) {
            addCriterion("frozen_balance >", value, "frozenBalance");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("frozen_balance >=", value, "frozenBalance");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceLessThan(BigDecimal value) {
            addCriterion("frozen_balance <", value, "frozenBalance");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("frozen_balance <=", value, "frozenBalance");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceIn(List<BigDecimal> values) {
            addCriterion("frozen_balance in", values, "frozenBalance");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceNotIn(List<BigDecimal> values) {
            addCriterion("frozen_balance not in", values, "frozenBalance");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("frozen_balance between", value1, value2, "frozenBalance");
            return (Criteria) this;
        }

        public Criteria andFrozenBalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("frozen_balance not between", value1, value2, "frozenBalance");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceIsNull() {
            addCriterion("gift_balance is null");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceIsNotNull() {
            addCriterion("gift_balance is not null");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceEqualTo(BigDecimal value) {
            addCriterion("gift_balance =", value, "giftBalance");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceNotEqualTo(BigDecimal value) {
            addCriterion("gift_balance <>", value, "giftBalance");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceGreaterThan(BigDecimal value) {
            addCriterion("gift_balance >", value, "giftBalance");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("gift_balance >=", value, "giftBalance");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceLessThan(BigDecimal value) {
            addCriterion("gift_balance <", value, "giftBalance");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("gift_balance <=", value, "giftBalance");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceIn(List<BigDecimal> values) {
            addCriterion("gift_balance in", values, "giftBalance");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceNotIn(List<BigDecimal> values) {
            addCriterion("gift_balance not in", values, "giftBalance");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("gift_balance between", value1, value2, "giftBalance");
            return (Criteria) this;
        }

        public Criteria andGiftBalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("gift_balance not between", value1, value2, "giftBalance");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftIsNull() {
            addCriterion("frozen_gift is null");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftIsNotNull() {
            addCriterion("frozen_gift is not null");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftEqualTo(BigDecimal value) {
            addCriterion("frozen_gift =", value, "frozenGift");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftNotEqualTo(BigDecimal value) {
            addCriterion("frozen_gift <>", value, "frozenGift");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftGreaterThan(BigDecimal value) {
            addCriterion("frozen_gift >", value, "frozenGift");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("frozen_gift >=", value, "frozenGift");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftLessThan(BigDecimal value) {
            addCriterion("frozen_gift <", value, "frozenGift");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftLessThanOrEqualTo(BigDecimal value) {
            addCriterion("frozen_gift <=", value, "frozenGift");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftIn(List<BigDecimal> values) {
            addCriterion("frozen_gift in", values, "frozenGift");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftNotIn(List<BigDecimal> values) {
            addCriterion("frozen_gift not in", values, "frozenGift");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("frozen_gift between", value1, value2, "frozenGift");
            return (Criteria) this;
        }

        public Criteria andFrozenGiftNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("frozen_gift not between", value1, value2, "frozenGift");
            return (Criteria) this;
        }

        public Criteria andCashIsNull() {
            addCriterion("cash is null");
            return (Criteria) this;
        }

        public Criteria andCashIsNotNull() {
            addCriterion("cash is not null");
            return (Criteria) this;
        }

        public Criteria andCashEqualTo(BigDecimal value) {
            addCriterion("cash =", value, "cash");
            return (Criteria) this;
        }

        public Criteria andCashNotEqualTo(BigDecimal value) {
            addCriterion("cash <>", value, "cash");
            return (Criteria) this;
        }

        public Criteria andCashGreaterThan(BigDecimal value) {
            addCriterion("cash >", value, "cash");
            return (Criteria) this;
        }

        public Criteria andCashGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("cash >=", value, "cash");
            return (Criteria) this;
        }

        public Criteria andCashLessThan(BigDecimal value) {
            addCriterion("cash <", value, "cash");
            return (Criteria) this;
        }

        public Criteria andCashLessThanOrEqualTo(BigDecimal value) {
            addCriterion("cash <=", value, "cash");
            return (Criteria) this;
        }

        public Criteria andCashIn(List<BigDecimal> values) {
            addCriterion("cash in", values, "cash");
            return (Criteria) this;
        }

        public Criteria andCashNotIn(List<BigDecimal> values) {
            addCriterion("cash not in", values, "cash");
            return (Criteria) this;
        }

        public Criteria andCashBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash between", value1, value2, "cash");
            return (Criteria) this;
        }

        public Criteria andCashNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("cash not between", value1, value2, "cash");
            return (Criteria) this;
        }

        public Criteria andPayPassIsNull() {
            addCriterion("pay_pass is null");
            return (Criteria) this;
        }

        public Criteria andPayPassIsNotNull() {
            addCriterion("pay_pass is not null");
            return (Criteria) this;
        }

        public Criteria andPayPassEqualTo(String value) {
            addCriterion("pay_pass =", value, "payPass");
            return (Criteria) this;
        }

        public Criteria andPayPassNotEqualTo(String value) {
            addCriterion("pay_pass <>", value, "payPass");
            return (Criteria) this;
        }

        public Criteria andPayPassGreaterThan(String value) {
            addCriterion("pay_pass >", value, "payPass");
            return (Criteria) this;
        }

        public Criteria andPayPassGreaterThanOrEqualTo(String value) {
            addCriterion("pay_pass >=", value, "payPass");
            return (Criteria) this;
        }

        public Criteria andPayPassLessThan(String value) {
            addCriterion("pay_pass <", value, "payPass");
            return (Criteria) this;
        }

        public Criteria andPayPassLessThanOrEqualTo(String value) {
            addCriterion("pay_pass <=", value, "payPass");
            return (Criteria) this;
        }

        public Criteria andPayPassLike(String value) {
            addCriterion("pay_pass like", value, "payPass");
            return (Criteria) this;
        }

        public Criteria andPayPassNotLike(String value) {
            addCriterion("pay_pass not like", value, "payPass");
            return (Criteria) this;
        }

        public Criteria andPayPassIn(List<String> values) {
            addCriterion("pay_pass in", values, "payPass");
            return (Criteria) this;
        }

        public Criteria andPayPassNotIn(List<String> values) {
            addCriterion("pay_pass not in", values, "payPass");
            return (Criteria) this;
        }

        public Criteria andPayPassBetween(String value1, String value2) {
            addCriterion("pay_pass between", value1, value2, "payPass");
            return (Criteria) this;
        }

        public Criteria andPayPassNotBetween(String value1, String value2) {
            addCriterion("pay_pass not between", value1, value2, "payPass");
            return (Criteria) this;
        }

        public Criteria andTradeTimeIsNull() {
            addCriterion("trade_time is null");
            return (Criteria) this;
        }

        public Criteria andTradeTimeIsNotNull() {
            addCriterion("trade_time is not null");
            return (Criteria) this;
        }

        public Criteria andTradeTimeEqualTo(Date value) {
            addCriterion("trade_time =", value, "tradeTime");
            return (Criteria) this;
        }

        public Criteria andTradeTimeNotEqualTo(Date value) {
            addCriterion("trade_time <>", value, "tradeTime");
            return (Criteria) this;
        }

        public Criteria andTradeTimeGreaterThan(Date value) {
            addCriterion("trade_time >", value, "tradeTime");
            return (Criteria) this;
        }

        public Criteria andTradeTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("trade_time >=", value, "tradeTime");
            return (Criteria) this;
        }

        public Criteria andTradeTimeLessThan(Date value) {
            addCriterion("trade_time <", value, "tradeTime");
            return (Criteria) this;
        }

        public Criteria andTradeTimeLessThanOrEqualTo(Date value) {
            addCriterion("trade_time <=", value, "tradeTime");
            return (Criteria) this;
        }

        public Criteria andTradeTimeIn(List<Date> values) {
            addCriterion("trade_time in", values, "tradeTime");
            return (Criteria) this;
        }

        public Criteria andTradeTimeNotIn(List<Date> values) {
            addCriterion("trade_time not in", values, "tradeTime");
            return (Criteria) this;
        }

        public Criteria andTradeTimeBetween(Date value1, Date value2) {
            addCriterion("trade_time between", value1, value2, "tradeTime");
            return (Criteria) this;
        }

        public Criteria andTradeTimeNotBetween(Date value1, Date value2) {
            addCriterion("trade_time not between", value1, value2, "tradeTime");
            return (Criteria) this;
        }

        public Criteria andErrorCntIsNull() {
            addCriterion("error_cnt is null");
            return (Criteria) this;
        }

        public Criteria andErrorCntIsNotNull() {
            addCriterion("error_cnt is not null");
            return (Criteria) this;
        }

        public Criteria andErrorCntEqualTo(Integer value) {
            addCriterion("error_cnt =", value, "errorCnt");
            return (Criteria) this;
        }

        public Criteria andErrorCntNotEqualTo(Integer value) {
            addCriterion("error_cnt <>", value, "errorCnt");
            return (Criteria) this;
        }

        public Criteria andErrorCntGreaterThan(Integer value) {
            addCriterion("error_cnt >", value, "errorCnt");
            return (Criteria) this;
        }

        public Criteria andErrorCntGreaterThanOrEqualTo(Integer value) {
            addCriterion("error_cnt >=", value, "errorCnt");
            return (Criteria) this;
        }

        public Criteria andErrorCntLessThan(Integer value) {
            addCriterion("error_cnt <", value, "errorCnt");
            return (Criteria) this;
        }

        public Criteria andErrorCntLessThanOrEqualTo(Integer value) {
            addCriterion("error_cnt <=", value, "errorCnt");
            return (Criteria) this;
        }

        public Criteria andErrorCntIn(List<Integer> values) {
            addCriterion("error_cnt in", values, "errorCnt");
            return (Criteria) this;
        }

        public Criteria andErrorCntNotIn(List<Integer> values) {
            addCriterion("error_cnt not in", values, "errorCnt");
            return (Criteria) this;
        }

        public Criteria andErrorCntBetween(Integer value1, Integer value2) {
            addCriterion("error_cnt between", value1, value2, "errorCnt");
            return (Criteria) this;
        }

        public Criteria andErrorCntNotBetween(Integer value1, Integer value2) {
            addCriterion("error_cnt not between", value1, value2, "errorCnt");
            return (Criteria) this;
        }

        public Criteria andErrorTimeIsNull() {
            addCriterion("error_time is null");
            return (Criteria) this;
        }

        public Criteria andErrorTimeIsNotNull() {
            addCriterion("error_time is not null");
            return (Criteria) this;
        }

        public Criteria andErrorTimeEqualTo(Date value) {
            addCriterion("error_time =", value, "errorTime");
            return (Criteria) this;
        }

        public Criteria andErrorTimeNotEqualTo(Date value) {
            addCriterion("error_time <>", value, "errorTime");
            return (Criteria) this;
        }

        public Criteria andErrorTimeGreaterThan(Date value) {
            addCriterion("error_time >", value, "errorTime");
            return (Criteria) this;
        }

        public Criteria andErrorTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("error_time >=", value, "errorTime");
            return (Criteria) this;
        }

        public Criteria andErrorTimeLessThan(Date value) {
            addCriterion("error_time <", value, "errorTime");
            return (Criteria) this;
        }

        public Criteria andErrorTimeLessThanOrEqualTo(Date value) {
            addCriterion("error_time <=", value, "errorTime");
            return (Criteria) this;
        }

        public Criteria andErrorTimeIn(List<Date> values) {
            addCriterion("error_time in", values, "errorTime");
            return (Criteria) this;
        }

        public Criteria andErrorTimeNotIn(List<Date> values) {
            addCriterion("error_time not in", values, "errorTime");
            return (Criteria) this;
        }

        public Criteria andErrorTimeBetween(Date value1, Date value2) {
            addCriterion("error_time between", value1, value2, "errorTime");
            return (Criteria) this;
        }

        public Criteria andErrorTimeNotBetween(Date value1, Date value2) {
            addCriterion("error_time not between", value1, value2, "errorTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_wallet
     *
     * @mbggenerated do_not_delete_during_merge Tue Apr 14 16:54:51 CST 2015
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table t_user_wallet
     *
     * @mbggenerated Tue Apr 14 16:54:51 CST 2015
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}
