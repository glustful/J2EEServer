<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd 
	http://www.springframework.org/schema/mvc 
    http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	
    <description>Spring-web MVC配置</description>
	
	 
    <!-- 对所有Controller类进行扫描，以完成Bean创建和自动依赖注入的功能 -->
    <context:component-scan base-package="com.dunbian.jujiabao.mvc">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
    </context:component-scan>
    
    <!-- 当请求应用程序首页时，将执行/index请求，还可以设定成redirect-->
    <mvc:view-controller path="/" view-name="forward:/food" />
	 
    <!-- 定义静态资源 -->
    <mvc:resources location="/static/" mapping="/static/**" />
    
    <!--  
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
      <property name="converters">
          <list>
              <bean class="com.smart.phoenix.convert.DateConvert"/>
              <bean class="com.smart.phoenix.convert.JSON2ObjectCovertFactory"></bean>
          </list>
      </property>
	</bean> 
	 
	 
	<mvc:annotation-driven validator="validator"
        conversion-service="conversionService" />
    -->
    <mvc:annotation-driven/>
    
    <!-- JSR349 
    <bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" >
        <property name="mappingLocations">
            <list>
                <value>classpath:validator/valid-*.xml</value>
            </list>
        </property>
    </bean>
    -->
    <!-- 
    <mvc:annotation-driven validator="validator"
        conversion-service="conversionService" />
     -->
     
    
    <!-- freemarker视图解析器 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="order" value="1" />
        <property name="cache" value="true" />
        <property name="prefix" value="/" />
        <!-- 模板后缀，指定ftl页面为模板 -->
        <property name="suffix" value=".ftl" />
        <!-- 使用这个模板类来解析视图 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
        <property name="exposeSpringMacroHelpers" value="true" />
        <!-- 允许访问请求属性，默认为false -->
        <property name="exposeRequestAttributes" value="true" />
        <!-- 允许访问会话属性，默认为false -->
        <property name="exposeSessionAttributes" value="true" />
        <!-- 允许使用 @SessionAttributes 特性 -->
        <!--  <property name="allowSessionOverride" value="true"/> -->
        <!-- 页面上下文，类似于request.contextPath -->
        <property name="requestContextAttribute" value="rc" />
        <!-- 模板输出内容编码，此处应与defaultEncoding保持一致 -->
        <property name="contentType" value="text/html;charset=UTF-8" />
    </bean>
    
    <!-- freemarker json视图解析器 -->
    <bean id="jsonViewResolver" class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="order" value="1" />
        <property name="cache" value="true" />
        <property name="prefix" value="/" />
        <!-- 模板后缀，指定ftl页面为模板 -->
        <property name="suffix" value=".json" />
        <!-- 使用这个模板类来解析视图 -->
        <property name="viewClass" value="org.springframework.web.servlet.view.freemarker.FreeMarkerView" />
        <property name="exposeSpringMacroHelpers" value="true" />
        <!-- 允许访问请求属性，默认为false -->
        <property name="exposeRequestAttributes" value="true" />
        <!-- 允许访问会话属性，默认为false -->
        <property name="exposeSessionAttributes" value="true" />
        <!-- 允许使用 @SessionAttributes 特性 -->
        <!--  <property name="allowSessionOverride" value="true"/> -->
        <!-- 页面上下文，类似于request.contextPath -->
        <property name="requestContextAttribute" value="rc" />
        <!-- 模板输出内容编码，此处应与defaultEncoding保持一致 -->
        <property name="contentType" value="application/json;charset=UTF-8" />
    </bean>
    
    
	
    <!-- 激活Spring MVC上传组件--> 
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />
	
	
    <!-- FreeMarker XML 转义处理 -->
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape" />
    
    <!-- 
    <bean id="sessionService" class="com.smart.phoenix.session.RedisSessionService" scope="singleton">
            <property name="dataSource" ref="phoenixDataSource"></property>
    </bean>
     -->
    
    <bean id="tSpringContext" class="com.puddingnet.mvc.servlet.SpringContext" lazy-init="false"/>
   
   <!-- 
    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <bean class="com.smart.phoenix.interceptor.SessionInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>
 -->
 
    
    <bean class="com.dunbian.jujiabao.framework.exception.CustomizedExceptionHanlder">
        <property name="exceptionMappings">
            <props>
                <prop key="com.dunbian.jujiabao.framework.exception.NoLoginException">redirect:http:/</prop>
                <prop key="java.lang.Throwable">/error/500</prop>
            </props>
        </property>
        <property name="exceptionCodes">
            <props>
                <prop key="java.lang.Throwable">500</prop>
            </props>
        </property>
        <property name="ajaxExceptionMappings">
            <props>
                <prop key="com.dunbian.jujiabao.framework.exception.NoLoginException">/error/nologin</prop>
                <prop key="java.lang.Throwable">/error/500-ajax</prop>
            </props>
        </property>
        <property name="ajaxExceptionCodes">
            <props>
                <prop key="com.dunbian.jujiabao.framework.exception.NoLoginException">405</prop>
                <prop key="java.lang.Throwable">200</prop>
            </props>
        </property>
    </bean>
    
    <!-- 异常处理句柄  
    <bean id="areaUtil" class="com.smart.phoenix.util.AreaUtil"></bean>
    <bean id="sessionUtil" class="com.smart.phoenix.util.SessionUtil"></bean>
    -->
</beans>